animatedEmoji.py :
  The code contains an Emoji class which serves to hold the emoji pixels which are being displayed and the display function to easily display
  the selected emoji. The main class uses a while loop to cycle through the 3 different emojis by resetting a count when it reaches the end.

monitorAndDisplay.py :
  The class Temp stores an array which has the numbers stored as 1 and 0 to produce the desired number in a 5x3 design later on the switch.
  The code determines the temperature by getting the temperature from both the humidity and pressure sensor, using code provided by the lecture,
  though because there was a bug where the sensors would return a 0 when first started they are checked a second time to ensure the right
  temperature was provided. When displaying the temperature the code checks to see if it has two digits, should it be smaller than 10 then a 0
  is put in front to display two digits.

electronicDie.py :

	Using a pre defined array in the RollDice class that store images of the 6 different dice faces, the detectShake method repeatedly checks the values of the accelerometer.
	once movement is detected, the dice_roll method is called, which generates a random digit between 0 and 5, and then displays that random element of the dice array to the screen.

game.py :

	This file contains the TwoPlayerGame class which uses electronicDie.py to play the dice game. You initiate the game by naming the two players which initialises their scores to zero and then Start_Game method is called.
	This will display the instructions and then call the player_turn method repeatedly until a player scores over 30.
	The player_turn method cycles between the two player objects, calling the detect_shake method from electronicDie class to detect shake and calculate the points awarded.
	When a player scores over 30 on their turn the end_game method is called which displays the appropriate message and games the game data to winner.csv




